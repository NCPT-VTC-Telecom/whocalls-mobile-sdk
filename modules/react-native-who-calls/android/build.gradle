import com.android.Version

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["WhoCalls_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.1.4"
    // noinspection DifferentKotlinGradleVersion
//    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

  def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
//apply plugin: "kotlin-android"


if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["WhoCalls_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["WhoCalls_" + name]).toInteger()
}

static def supportsNamespace() {
  def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  compileSdk 34
  if (supportsNamespace()) {
    namespace "com.whocalls"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
        jniLibs.srcDirs = ['libs']
      }
    }
  }


  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}





repositories {
  mavenCentral()
  google()
  flatDir {
    dirs 'src/libs'  // Ensure this points to the directory containing your AAR
  }
}



def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
  implementation(name: 'KL_Base_SDK_Android_5.15.0.506_Release', ext: 'aar')
  implementation(name: 'KL_Mobile_SDK_Android_5.15.0.506_WhocallsRelease', ext: 'aar')
  implementation 'com.facebook.react:react-native:0.20.1'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//  implementation("com.facebook.react:react-android:+")
  implementation 'androidx.appcompat:appcompat:1.6.1'
  implementation 'com.google.android.material:material:1.9.0'

}

